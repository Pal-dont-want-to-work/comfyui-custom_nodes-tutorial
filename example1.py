import random

import torch

import comfy.model_management

##############################################################
# 1.定义一个类A，一个节点就是一个类。comfyui会引入这个类作为一个节点
##############################################################
class A:
    def __init__(self):
        pass
        
    ##############################
    # 2. 使用关键的标识符来表示该节点
    ##############################
    CATEGORY = "😀😀😀my custom plugin:A_example😀😀😀"

    ###############
    # 3.节点左侧输入
    ###############
    @classmethod
    def INPUT_TYPES(s):# 固定格式，输入参数种类
        # 返回一个包含所需输入类型的字典，这里暂时不定义输入！！！
        return {
  
        }
    ###############
    # 4.节点右侧输出
    ###############
    OUTPUT_NODE = True  # 表明它是一个输出节点
    # 输出的数据类型，需要大写
    RETURN_TYPES = ("INT",)
    # 自定义输出名称
    RETURN_NAMES = ("1个整数",)

    ##############################
    # 5. 节点的核心功能逻辑在这里定义
    ##############################
    FUNCTION = "test" # 核心功能函数名称，将运行这个类中的这个方法

    def test(self,):
        pass

    # 注意：以上代码，只代表了该节点的功能，还需要通过__init__.py引入

